<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Tunnel_Next.Resources.Controls">

    <!-- 转换器资源 -->
    <local:IndexToDelayConverter x:Key="IndexToDelayConverter"/>
    
    <!-- 动画辅助类 - 弹性缓动函数 -->
    <CubicEase x:Key="ElasticEase" EasingMode="EaseOut"/>
    <ElasticEase x:Key="MenuItemEase" EasingMode="EaseOut" Oscillations="1" Springiness="3"/>
    <BackEase x:Key="QuickEase" EasingMode="EaseOut" Amplitude="0.3"/>
    
    <!-- 菜单项背景色 - 使用径向渐变 -->
    <RadialGradientBrush x:Key="MenuItemIdleBrush" RadiusX="4.37756" RadiusY="6.21475" Center="0.499677,1.08794" GradientOrigin="0.499677,1.08794">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#6ADDFFFD" Offset="0.00153139"/>
            <GradientStop Color="#76000000" Offset="0.148545"/>
            <GradientStop Color="#E07FCEFF" Offset="0.32925"/>
            <GradientStop Color="#FF000000" Offset="0.344564"/>
            <GradientStop Color="#FF0099FF" Offset="0.828484"/>
        </RadialGradientBrush.GradientStops>
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <RotateTransform CenterX="0.499677" CenterY="1.08794" Angle="-90"/>
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
    </RadialGradientBrush>
    
    <RadialGradientBrush x:Key="MenuItemHoverBrush" RadiusX="4.37756" RadiusY="6.21475" Center="0.499677,1.08794" GradientOrigin="0.499677,1.08794">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#7800F3FF" Offset="0"/>
            <GradientStop Color="#6A000000" Offset="0.148545"/>
            <GradientStop Color="#FFA5DBFF" Offset="0.316998"/>
            <GradientStop Color="#FF0099FF" Offset="0.577335"/>
        </RadialGradientBrush.GradientStops>
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <RotateTransform CenterX="0.499677" CenterY="1.08794" Angle="-90"/>
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
    </RadialGradientBrush>
    
    <RadialGradientBrush x:Key="MenuItemClickedBrush" RadiusX="4.37757" RadiusY="6.21475" Center="0.499677,1.08794" GradientOrigin="0.499677,1.08794">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#FF00F3FF" Offset="0"/>
            <GradientStop Color="#59000000" Offset="0.169985"/>
            <GradientStop Color="#EBA5DBFF" Offset="0.307808"/>
            <GradientStop Color="#FF0099FF" Offset="0.577335"/>
        </RadialGradientBrush.GradientStops>
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <RotateTransform CenterX="0.499677" CenterY="1.08794" Angle="-90"/>
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
    </RadialGradientBrush>
    
    <!-- 菜单项模板 - 用于创建带有动画的菜单项 -->
    <ControlTemplate x:Key="AnimatedMenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" 
                Background="Transparent" 
                BorderThickness="0" 
                Padding="10,5"
                CornerRadius="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- 图标区域 -->
                <ContentPresenter x:Name="Icon" 
                                 ContentSource="Icon" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" 
                                 Width="20" 
                                 Height="20" 
                                 Margin="3"/>

                <!-- 菜单项内容 -->
                <ContentPresenter x:Name="HeaderHost" 
                                 Grid.Column="1" 
                                 ContentSource="Header" 
                                 VerticalAlignment="Center" 
                                 Margin="7,0"
                                 TextBlock.FontSize="13">
                    <ContentPresenter.Effect>
                        <DropShadowEffect ShadowDepth="0.5" Color="#333333" Opacity="1" BlurRadius="3" />
                    </ContentPresenter.Effect>
                </ContentPresenter>
                                 
                <!-- 快捷键 -->
                <TextBlock x:Name="InputGestureText" 
                          Grid.Column="2" 
                          Text="{TemplateBinding InputGestureText}" 
                          VerticalAlignment="Center"
                          FontSize="13"
                          Margin="7,0">
                    <TextBlock.Effect>
                        <DropShadowEffect ShadowDepth="0.5" Color="#333333" Opacity="0.8" BlurRadius="3" />
                    </TextBlock.Effect>
                </TextBlock>
                          
                <!-- 子菜单箭头 -->
                <Path x:Name="Arrow" 
                     Grid.Column="3" 
                     Data="M0,0L4,4L0,8Z" 
                     Fill="#AAFFFFFF"
                     HorizontalAlignment="Center" 
                     VerticalAlignment="Center"
                     Width="5"
                     Height="7"
                     Margin="7,0" 
                     Visibility="Collapsed"/>

                <!-- 子菜单项 -->
                <Popup x:Name="Popup" 
                      Placement="Right" 
                      IsOpen="{TemplateBinding IsSubmenuOpen}" 
                      AllowsTransparency="True" 
                      PopupAnimation="Fade" 
                      HorizontalOffset="0"
                      VerticalOffset="0"
                      Focusable="False">
                    <Border x:Name="SubMenuBorder" 
                           Background="Transparent" 
                           BorderThickness="0">
                        <ScrollViewer CanContentScroll="True" 
                                     Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ContextMenu, ResourceId=MenuScrollViewer}}">
                            <ItemsPresenter x:Name="ItemsPresenter" 
                                          KeyboardNavigation.DirectionalNavigation="Cycle" 
                                          Margin="2"
                                          Opacity="1"/>
                        </ScrollViewer>
                    </Border>
                    <!-- 为子菜单项应用无动画样式 -->
                    <Popup.Resources>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Border x:Name="Border" 
                                                Background="Transparent" 
                                                BorderThickness="0" 
                                                Padding="10,5"
                                                CornerRadius="0">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                
                                                <!-- 图标区域 -->
                                                <ContentPresenter x:Name="Icon" 
                                                                ContentSource="Icon" 
                                                                HorizontalAlignment="Center" 
                                                                VerticalAlignment="Center" 
                                                                Width="20" 
                                                                Height="20" 
                                                                Margin="3"/>

                                                <!-- 菜单项内容 -->
                                                <ContentPresenter x:Name="HeaderHost" 
                                                                Grid.Column="1" 
                                                                ContentSource="Header" 
                                                                VerticalAlignment="Center" 
                                                                Margin="7,0"
                                                                TextBlock.FontSize="13">
                                                    <ContentPresenter.Effect>
                                                        <DropShadowEffect ShadowDepth="0.5" Color="#333333" Opacity="1" BlurRadius="3" />
                                                    </ContentPresenter.Effect>
                                                </ContentPresenter>
                                                                
                                                <!-- 快捷键 -->
                                                <TextBlock x:Name="InputGestureText" 
                                                        Grid.Column="2" 
                                                        Text="{TemplateBinding InputGestureText}" 
                                                        VerticalAlignment="Center"
                                                        FontSize="13"
                                                        Margin="7,0">
                                                    <TextBlock.Effect>
                                                        <DropShadowEffect ShadowDepth="0.5" Color="#333333" Opacity="0.8" BlurRadius="3" />
                                                    </TextBlock.Effect>
                                                </TextBlock>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <!-- 悬停状态 -->
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="Border" Value="{StaticResource MenuItemHoverBrush}"/>
                                                <Setter Property="Opacity" TargetName="Border" Value="0.9"/>
                                            </Trigger>
                                            
                                            <!-- 点击状态 -->
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="Border" Value="{StaticResource MenuItemClickedBrush}"/>
                                                <Setter Property="Opacity" TargetName="Border" Value="1.0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Popup.Resources>
                </Popup>


            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!-- 默认状态 -->
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource MenuItemIdleBrush}"/>
                <Setter Property="Opacity" TargetName="Border" Value="0.7"/>
            </Trigger>
            
            <!-- 悬停状态 -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource MenuItemHoverBrush}"/>
                <Setter Property="Opacity" TargetName="Border" Value="0.9"/>
            </Trigger>
            
            <!-- 悬停在有子菜单的菜单项上时，自动打开子菜单 -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="HasItems" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="IsSubmenuOpen" Value="True" />
            </MultiTrigger>
            
            <!-- 点击状态 -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource MenuItemClickedBrush}"/>
                <Setter Property="Opacity" TargetName="Border" Value="1.0"/>
            </Trigger>
            
            <!-- 禁用状态 -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            
            <!-- 子菜单箭头显示 -->
            <Trigger Property="HasItems" Value="True">
                <Setter Property="Visibility" TargetName="Arrow" Value="Visible"/>
            </Trigger>

            <!-- 子菜单打开时样式 -->
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource MenuItemClickedBrush}"/>
                <Setter Property="Opacity" TargetName="Border" Value="1.0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- 自定义右键菜单样式 -->
    <Style x:Key="AnimatedContextMenuStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Background="Transparent" Padding="0">
                        <ItemsPresenter Margin="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- 使用附加属性来处理菜单项索引 -->
        <Setter Property="local:MenuItemIndexer.AutoIndex" Value="True"/>
    </Style>
    
    <!-- 自定义菜单项样式 - 包含动画 -->
    <Style x:Key="AnimatedMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template" Value="{StaticResource AnimatedMenuItemTemplate}"/>
        <!-- 初始透明度为0，用于淡入 -->
        <Setter Property="Opacity" Value="0"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MenuItem.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <!-- 仅淡入，不再缩放 -->
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                         From="0" To="1" 
                                         Duration="0:0:0.15"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- 附加属性转换器 - 将菜单项位置转换为动画延迟时间 -->
    <local:PositionToDelayConverter x:Key="PositionToDelayConverter"/>

    <!-- 符号节点菜单项样式 - 继承自普通菜单项样式，但使用红色字体 -->
    <Style x:Key="SymbolNodeMenuItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource AnimatedMenuItemStyle}">
        <Setter Property="Foreground" Value="Red"/>
    </Style>

    <!-- 应用样式到相应控件类型 -->
    <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource AnimatedContextMenuStyle}"/>
    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource AnimatedMenuItemStyle}"/>
    
</ResourceDictionary> 